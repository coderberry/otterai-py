name: CI

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        # Note: Environment variables for integration tests are not needed
        # since we only run unit tests in CI to avoid rate limiting

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      myenv
                      ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m venv myenv
                  source myenv/bin/activate
                  pip install --upgrade pip
                  pip install .[dev]

            - name: Create placeholder .env file
              run: |
                  echo "# Placeholder .env file for CI" > .env
                  echo "# Integration tests are skipped to avoid rate limiting" >> .env
                  echo "OTTERAI_USERNAME=dummy" >> .env
                  echo "OTTERAI_PASSWORD=dummy" >> .env
                  echo "TEST_OTTERAI_SPEECH_OTID=dummy" >> .env

            - name: Run pre-commit checks
              env:
                  PRE_COMMIT_HOME: ${{ runner.temp }}/.cache/pre-commit
              run: |
                  source myenv/bin/activate
                  pre-commit install
                  pre-commit run --all-files

            - name: Run unit tests with coverage
              run: |
                  source myenv/bin/activate
                  pytest -s \
                    --cov=otterai \
                    --cov-report=term-missing \
                    --cov-report=lcov:lcov.info \
                    --cov-report=xml:cov.xml \
                    -m "not integration"

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  files: ./cov.xml
                  fail_ci_if_error: false
